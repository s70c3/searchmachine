swagger: "2.0"
info:
  description: "REST YELLOT CALCULATOR API"
  version: "1.0.0"
  title: "YELLOT CALCULATOR API"
host: "95.217.217.21:5022"
basePath: "/"
schemes:
- "http"


tags:
- name: "price"
- name: "dxf"
- name: "pack"
- name: "files"
- name: "health"


paths:
  /calc_detail:
    post:
      tags:
      - "price"
      description: "Calculates detail price. Based on tabular detail data"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "size"
        in: "query"
        description: "Detail sizes separated with symbol -. Size must be float or integer. Example of valid size: 0.5-123-456"
        required: true
        type: "string"
      - name: "mass"
        in: "query"
        description: "Detail mass in kg"
        type: "number"
        format: "double"
        required: true
      - name: "material"
        in: "query"
        description: "Material data. Example: Рулон БТ-БШ-О-0,55х1250 08пс-ОН-НР-1"
        required: true
        type: "string"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/PricePredictionResponce"

  /calc_detail_schema:
    post:
      tags:
      - "price"
      description: "Calculates detail price and techprocesses with pdf schema. Techprocesses predicts by detail parameters and/or pdf schema. Techprocesses may be an empty array"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pdf_link"
        in: "query"
        required: true
        type: "string"
        description: "link to detail pdf schema"
      - name: "size"
        in: "query"
        description: "Detail sizes separated with symbol -. Size must be float or integer. Example of valid size: 0.5-123-456"
        required: true
        type: "string"
      - name: "detail_name"
        in: "query"
        type: "string"
        required: true
      - name: "mass"
        in: "query"
        description: "Detail mass in kg"
        type: "number"
        format: "double"
        required: true
      - name: "material"
        in: "query"
        description: "Material data. Example: Рулон БТ-БШ-О-0,55х1250 08пс-ОН-НР-1"
        type: "string"
        required: true
      - name: "material_thickness"
        in: "query"
        description: "Thickness of the material"
        type: "number"
        required: true
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/SchemaPricePredictionResponce"

  /get_params_by_schema:
    post:
      tags:
      - "price"
      description: "Calculates detail parameters based on given parameters and pdf schema. Use for calculating and/or validating parameters for /calc_detail_schema and etc. Validation applied automatically, null returned if prediction is invalid"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pdf_link"
        in: "query"
        required: true
        type: "string"
        description: "link to detail pdf schema"
      - name: "material"
        in: "query"
        required: false
        type: "string"
        description: "material of the detail. Used for fetch material thickness parameter. If not given, thickness predicted by extracted material. Example of material: Рулон БТ-БШ-О-0,55х1250 08пс-ОН-НР-1"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/ParamsBySchemaResponce"


  /health:
    get:
      tags:
      - "health"
      description: "Check if server is alive"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "ok"
          schema:
            type: "object"
            properties:
              status:
                type: "string"
                default: "working"


  /dxf/sizes:
    get:
      tags:
      - "dxf"
      consumes:
      - "application/json"
      parameters:
      - name: "dxf"
        required: true
        in: "query"
        type: "string"
        description: "Name of dxf file"
      responses:
        "200":
          description: "ok"
          schema:
            type: "object"
            properties:
              w:
                type: "number"
              h:
                type: "number"

  /get_dxf_sizes:
    get:
      deprecated: true
      tags:
      - "dxf"
      consumes:
      - "application/json"
      parameters:
      - name: "dxf"
        required: true
        in: "query"
        type: "string"
        description: "Name of dxf file"
      responses:
        "200":
          description: "ok"
          schema:
            type: "object"
            properties:
              w:
                type: "number"
              h:
                type: "number"

  /dxf/square:
    get:
      tags:
      - "dxf"
      consumes:
      - "application/json"
      parameters:
      - name: "dxf"
        required: true
        in: "query"
        type: "string"
        description: "Name of dxf file"
      responses:
        "200":
          description: "ok"
          schema:
            type: "object"
            properties:
              square:
                type: "number"

  /dxf/points:
    get:
      tags:
      - "dxf"
      consumes:
      - "application/json"
      parameters:
      - name: "dxf"
        required: true
        in: "query"
        type: "string"
        description: "Name of dxf file"
      responses:
        "200":
          description: "ok"
          schema:
            type: "object"
            properties:
              points:
                type: "array"
                items:
                  type: "array"
                  description: "Points"
                  items:
                    type: "number"
                    description: "Point coordinate"


  /pack_details:
    post:
      deprecated: true
      tags:
        - "pack"
      description: "Packs details with rectangular packing algorithm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "details"
        in: "body"
        schema:
          $ref: "#/pack/RectRequestSchema"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/pack/Schema"

  /pack/rectangular:
    post:
      tags:
        - "pack"
      description: "Packs details with rectangular packing algorithm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "details"
        in: "body"
        schema:
          $ref: "#/pack/RectRequestSchema"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/pack/Schema"

  /pack_details_svgnest:
    post:
      deprecated: true
      tags:
        - "pack"
      description: "Packs details with svgnest packing algorithm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "details"
        in: "body"
        schema:
          $ref: "#/pack/DxfRequestSchema"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/pack/Schema"

  /pack/svgnest:
    post:
      tags:
        - "pack"
      description: "Packs details with svgnest packing algorithm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "details"
        in: "body"
        schema:
          $ref: "#/pack/DxfRequestSchema"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/pack/Schema"

  /pack_details_hybrid:
    post:
      deprecated: true
      tags:
        - "pack"
      description: "Packs details with svgnest+rectangular packing algorithm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "details"
        in: "body"
        schema:
          $ref: "#/pack/DxfRequestSchema"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/pack/Schema"

  /pack/hybrid:
    post:
      tags:
        - "pack"
      description: "Packs details with svgnest+rectangular packing algorithm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "details"
        in: "body"
        schema:
          $ref: "#/pack/DxfRequestSchema"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/pack/Schema"




definitions:
  PricePredictionResponce:
    type: "object"
    properties:
      price:
        type: "number"
        description: "Predicted price"
      linsizes:
        type: "array"
        items:
          type: "number"
          description: "Size recognized on pdf schema"
      techprocesses:
        type: "array"
        items:
          $ref: "#/definitions/Techprocess"
      info:
        type: "object"
        properties:
          predicted_by:
            type: "object"
            properties:
              tabular:
                type: "boolean"
                default: True
              scheme:
                type: "boolean"
                default: False
          errors:
            type: "array"
            items:
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Description of the error"

  Techprocess:
    type: "object"
    description: "Info about techprocess"
    properties:
      name:
        type: "string"
        description: "Name of techprocess"
      norm:
        type: "number"
        description: "Time norm of current techprocess for detail. May be null"

  SchemaPricePredictionResponce:
    type: "object"
    properties:
      price:
        type: "number"
        description: "Predicted price"
      techprocesses:
        type: "array"
        items:
          $ref: "#/definitions/Techprocess"
      info:
        type: "object"
        properties:
          warnings:
            type: "array"
            items:
              type: "object"
          errors:
            type: "array"
            items:
              type: "object"
      params:
        type: "object"
        description: "key-value pairs of parameters used for prediction"

  ParamsBySchemaResponce:
    type: "object"
    properties:
      mass:
        type: "number"
        description: "Predicted mass"
      material:
        type: "string"
      material_thickness_by_img:
        type: "string"
      meterial_thickness_by_given_material:
        type: "string"

pack:
  RectRequestSchema:
    type: "object"
    properties:
      details:
        type: "array"
        items:
          type: "object"
          properties:
            width:
              type: "number"
            height:
              type: "number"
            quantity:
              type: "integer"
            dxf:
              type: "string"
              required: false
      material:
        type: "object"
        properties:
          width:
            type: "number"
          height:
            type: "number"
      render_packing_maps:
        type: "boolean"

  DxfRequestSchema:
    type: "object"
    properties:
      details:
        type: "array"
        items:
          type: "object"
          properties:
            quantity:
              type: "integer"
            dxf:
              type: "string"
              required: true
      material:
        type: "object"
        properties:
          width:
            type: "number"
          height:
            type: "number"
      render_packing_maps:
        type: "boolean"
      iterations:
        type: "integer"
        description: "number of iterations for packing genetic algorithm"
      rotations:
        type: "integer"
        description: "number of rotations for details. Degrees of rotation will be 360/N. For N=2 it will be 360/1, 360/2"

  Schema:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          type: "string"
      additional:
        type: "object"
      results:
        type: "object"
        properties:
          materials:
            type: "object"
            properties:
              n:
                type: "number"
          kim:
            type: "object"
            properties:
              average:
                type: "number"
              all:
                type: "array"
                items:
                  type: "number"
          ids_per_list:
            type: "array"
            items:
              type: "object"
      renders:
        type: "string"
        description: "path to archive with packing images"



